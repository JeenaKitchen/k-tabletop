{"ast":null,"code":"var _jsxFileName = \"/Users/eunjinjeong/k-tabletop/src/components/ThemeBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ThemeBackground.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeBackground = ({\n  background,\n  video,\n  isTransitioning,\n  transitionDirection\n}) => {\n  _s();\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const [loadingStartTime, setLoadingStartTime] = useState(null);\n  const videoRef = useRef(null);\n\n  // Reset state when video prop changes (theme switch)\n  useEffect(() => {\n    console.log('ThemeBackground: video prop changed:', video);\n    setIsVideoLoaded(false);\n    setIsVideoPlaying(false);\n    setShowLoading(false);\n    setLoadingStartTime(Date.now());\n  }, [video]);\n\n  // Show loading after 1 second\n  useEffect(() => {\n    if (loadingStartTime && !isVideoLoaded) {\n      const timer = setTimeout(() => {\n        if (!isVideoLoaded) {\n          setShowLoading(true);\n        }\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [loadingStartTime, isVideoLoaded]);\n  useEffect(() => {\n    if (videoRef.current && video) {\n      const videoElement = videoRef.current;\n      const handleLoadedData = () => {\n        console.log('Video loaded successfully:', video);\n        setIsVideoLoaded(true);\n        setIsVideoPlaying(true);\n        setShowLoading(false);\n      };\n      const handleCanPlay = () => {\n        console.log('Video can play, attempting to start playback:', video);\n        videoElement.play().catch(error => {\n          console.error('Failed to play video:', error);\n          setIsVideoPlaying(false);\n        });\n      };\n      const handleError = error => {\n        console.error('Video error:', error);\n        setIsVideoPlaying(false);\n        setShowLoading(false);\n      };\n      videoElement.addEventListener('loadeddata', handleLoadedData);\n      videoElement.addEventListener('canplay', handleCanPlay);\n      videoElement.addEventListener('error', handleError);\n      return () => {\n        videoElement.removeEventListener('loadeddata', handleLoadedData);\n        videoElement.removeEventListener('canplay', handleCanPlay);\n        videoElement.removeEventListener('error', handleError);\n      };\n    }\n  }, [video]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `theme-background ${isTransitioning ? 'transitioning' : ''} ${isTransitioning ? `transition-${transitionDirection}` : ''}`,\n    children: [video && /*#__PURE__*/_jsxDEV(\"video\", {\n      // Force re-render when video changes\n      ref: videoRef,\n      className: `theme-video ${isVideoLoaded ? 'loaded' : ''} ${isTransitioning ? 'transitioning' : ''}`,\n      autoPlay: true,\n      muted: true,\n      loop: true,\n      playsInline: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: video,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, video, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), showLoading && !isVideoLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apple-loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"apple-loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"apple-spinner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"apple-spinner-ring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"apple-spinner-ring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"apple-spinner-ring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"apple-loading-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"apple-loading-title\",\n            children: \"Loading Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"apple-loading-subtitle\",\n            children: \"Please wait...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeBackground, \"o9EThc0GIwT00JJg7eDPQ4I/nnw=\");\n_c = ThemeBackground;\nexport default ThemeBackground;\nvar _c;\n$RefreshReg$(_c, \"ThemeBackground\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ThemeBackground","background","video","isTransitioning","transitionDirection","_s","isVideoLoaded","setIsVideoLoaded","isVideoPlaying","setIsVideoPlaying","showLoading","setShowLoading","loadingStartTime","setLoadingStartTime","videoRef","console","log","Date","now","timer","setTimeout","clearTimeout","current","videoElement","handleLoadedData","handleCanPlay","play","catch","error","handleError","addEventListener","removeEventListener","className","children","ref","autoPlay","muted","loop","playsInline","src","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eunjinjeong/k-tabletop/src/components/ThemeBackground.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ThemeBackground.css';\n\nconst ThemeBackground = ({ background, video, isTransitioning, transitionDirection }) => {\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const [loadingStartTime, setLoadingStartTime] = useState(null);\n  const videoRef = useRef(null);\n\n  // Reset state when video prop changes (theme switch)\n  useEffect(() => {\n    console.log('ThemeBackground: video prop changed:', video);\n    setIsVideoLoaded(false);\n    setIsVideoPlaying(false);\n    setShowLoading(false);\n    setLoadingStartTime(Date.now());\n  }, [video]);\n\n  // Show loading after 1 second\n  useEffect(() => {\n    if (loadingStartTime && !isVideoLoaded) {\n      const timer = setTimeout(() => {\n        if (!isVideoLoaded) {\n          setShowLoading(true);\n        }\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [loadingStartTime, isVideoLoaded]);\n\n  useEffect(() => {\n    if (videoRef.current && video) {\n      const videoElement = videoRef.current;\n      \n      const handleLoadedData = () => {\n        console.log('Video loaded successfully:', video);\n        setIsVideoLoaded(true);\n        setIsVideoPlaying(true);\n        setShowLoading(false);\n      };\n      \n      const handleCanPlay = () => {\n        console.log('Video can play, attempting to start playback:', video);\n        videoElement.play().catch((error) => {\n          console.error('Failed to play video:', error);\n          setIsVideoPlaying(false);\n        });\n      };\n\n      const handleError = (error) => {\n        console.error('Video error:', error);\n        setIsVideoPlaying(false);\n        setShowLoading(false);\n      };\n\n      videoElement.addEventListener('loadeddata', handleLoadedData);\n      videoElement.addEventListener('canplay', handleCanPlay);\n      videoElement.addEventListener('error', handleError);\n      \n      return () => {\n        videoElement.removeEventListener('loadeddata', handleLoadedData);\n        videoElement.removeEventListener('canplay', handleCanPlay);\n        videoElement.removeEventListener('error', handleError);\n      };\n    }\n  }, [video]);\n\n  return (\n    <div className={`theme-background ${isTransitioning ? 'transitioning' : ''} ${isTransitioning ? `transition-${transitionDirection}` : ''}`}>\n      {video && (\n        <video \n          key={video} // Force re-render when video changes\n          ref={videoRef}\n          className={`theme-video ${isVideoLoaded ? 'loaded' : ''} ${isTransitioning ? 'transitioning' : ''}`}\n          autoPlay \n          muted \n          loop \n          playsInline\n        >\n          <source src={video} type=\"video/mp4\" />\n        </video>\n      )}\n      \n      {/* Apple-style loading overlay */}\n      {showLoading && !isVideoLoaded && (\n        <div className=\"apple-loading-overlay\">\n          <div className=\"apple-loading-content\">\n            <div className=\"apple-spinner\">\n              <div className=\"apple-spinner-ring\"></div>\n              <div className=\"apple-spinner-ring\"></div>\n              <div className=\"apple-spinner-ring\"></div>\n            </div>\n            <div className=\"apple-loading-text\">\n              <span className=\"apple-loading-title\">Loading Theme</span>\n              <span className=\"apple-loading-subtitle\">Please wait...</span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ThemeBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}