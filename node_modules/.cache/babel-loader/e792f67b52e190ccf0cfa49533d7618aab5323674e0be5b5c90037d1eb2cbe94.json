{"ast":null,"code":"var _jsxFileName = \"/Users/eunjinjeong/Desktop/cursor project/k-tabletop/src/components/ThemeBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ThemeBackground.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeBackground = ({\n  background,\n  video\n}) => {\n  _s();\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const videoRef = useRef(null);\n\n  // Reset state when video prop changes (theme switch)\n  useEffect(() => {\n    console.log('ThemeBackground: video prop changed:', video);\n    setIsVideoLoaded(false);\n    setIsVideoPlaying(false);\n  }, [video]);\n  useEffect(() => {\n    if (videoRef.current && video) {\n      const videoElement = videoRef.current;\n      const handleLoadedData = () => {\n        console.log('Video loaded successfully:', video);\n        setIsVideoLoaded(true);\n        setIsVideoPlaying(true);\n      };\n      const handleCanPlay = () => {\n        console.log('Video can play, attempting to start playback:', video);\n        videoElement.play().catch(error => {\n          console.error('Failed to play video:', error);\n          setIsVideoPlaying(false);\n        });\n      };\n      const handleError = error => {\n        console.error('Video error:', error);\n        setIsVideoPlaying(false);\n      };\n      videoElement.addEventListener('loadeddata', handleLoadedData);\n      videoElement.addEventListener('canplay', handleCanPlay);\n      videoElement.addEventListener('error', handleError);\n      return () => {\n        videoElement.removeEventListener('loadeddata', handleLoadedData);\n        videoElement.removeEventListener('canplay', handleCanPlay);\n        videoElement.removeEventListener('error', handleError);\n      };\n    }\n  }, [video]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theme-background\",\n    children: [video && /*#__PURE__*/_jsxDEV(\"video\", {\n      // Force re-render when video changes\n      ref: videoRef,\n      className: `theme-video ${isVideoLoaded ? 'loaded' : ''}`,\n      autoPlay: true,\n      muted: true,\n      loop: true,\n      playsInline: true,\n      poster: background,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: video,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: background,\n        alt: \"theme background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, video, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), (!video || !isVideoPlaying) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-background-image\",\n      style: {\n        backgroundImage: `url(${background})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeBackground, \"mVeukM/i330KhAHIEkLca15VlcE=\");\n_c = ThemeBackground;\nexport default ThemeBackground;\nvar _c;\n$RefreshReg$(_c, \"ThemeBackground\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ThemeBackground","background","video","_s","isVideoLoaded","setIsVideoLoaded","isVideoPlaying","setIsVideoPlaying","videoRef","console","log","current","videoElement","handleLoadedData","handleCanPlay","play","catch","error","handleError","addEventListener","removeEventListener","className","children","ref","autoPlay","muted","loop","playsInline","poster","src","type","fileName","_jsxFileName","lineNumber","columnNumber","alt","style","backgroundImage","_c","$RefreshReg$"],"sources":["/Users/eunjinjeong/Desktop/cursor project/k-tabletop/src/components/ThemeBackground.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ThemeBackground.css';\n\nconst ThemeBackground = ({ background, video }) => {\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const videoRef = useRef(null);\n\n  // Reset state when video prop changes (theme switch)\n  useEffect(() => {\n    console.log('ThemeBackground: video prop changed:', video);\n    setIsVideoLoaded(false);\n    setIsVideoPlaying(false);\n  }, [video]);\n\n  useEffect(() => {\n    if (videoRef.current && video) {\n      const videoElement = videoRef.current;\n      \n      const handleLoadedData = () => {\n        console.log('Video loaded successfully:', video);\n        setIsVideoLoaded(true);\n        setIsVideoPlaying(true);\n      };\n      \n      const handleCanPlay = () => {\n        console.log('Video can play, attempting to start playback:', video);\n        videoElement.play().catch((error) => {\n          console.error('Failed to play video:', error);\n          setIsVideoPlaying(false);\n        });\n      };\n\n      const handleError = (error) => {\n        console.error('Video error:', error);\n        setIsVideoPlaying(false);\n      };\n\n      videoElement.addEventListener('loadeddata', handleLoadedData);\n      videoElement.addEventListener('canplay', handleCanPlay);\n      videoElement.addEventListener('error', handleError);\n      \n      return () => {\n        videoElement.removeEventListener('loadeddata', handleLoadedData);\n        videoElement.removeEventListener('canplay', handleCanPlay);\n        videoElement.removeEventListener('error', handleError);\n      };\n    }\n  }, [video]);\n\n  return (\n    <div className=\"theme-background\">\n      {video && (\n        <video \n          key={video} // Force re-render when video changes\n          ref={videoRef}\n          className={`theme-video ${isVideoLoaded ? 'loaded' : ''}`}\n          autoPlay \n          muted \n          loop \n          playsInline\n          poster={background}\n        >\n          <source src={video} type=\"video/mp4\" />\n          <img src={background} alt=\"theme background\" />\n        </video>\n      )}\n      \n      {(!video || !isVideoPlaying) && (\n        <div \n          className=\"theme-background-image\" \n          style={{ backgroundImage: `url(${background})` }} \n        />\n      )}\n    </div>\n  );\n};\n\nexport default ThemeBackground; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMa,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAD,SAAS,CAAC,MAAM;IACda,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAER,KAAK,CAAC;IAC1DG,gBAAgB,CAAC,KAAK,CAAC;IACvBE,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEXN,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,CAACG,OAAO,IAAIT,KAAK,EAAE;MAC7B,MAAMU,YAAY,GAAGJ,QAAQ,CAACG,OAAO;MAErC,MAAME,gBAAgB,GAAGA,CAAA,KAAM;QAC7BJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAER,KAAK,CAAC;QAChDG,gBAAgB,CAAC,IAAI,CAAC;QACtBE,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC;MAED,MAAMO,aAAa,GAAGA,CAAA,KAAM;QAC1BL,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAER,KAAK,CAAC;QACnEU,YAAY,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;UACnCR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7CV,iBAAiB,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC;MAED,MAAMW,WAAW,GAAID,KAAK,IAAK;QAC7BR,OAAO,CAACQ,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCV,iBAAiB,CAAC,KAAK,CAAC;MAC1B,CAAC;MAEDK,YAAY,CAACO,gBAAgB,CAAC,YAAY,EAAEN,gBAAgB,CAAC;MAC7DD,YAAY,CAACO,gBAAgB,CAAC,SAAS,EAAEL,aAAa,CAAC;MACvDF,YAAY,CAACO,gBAAgB,CAAC,OAAO,EAAED,WAAW,CAAC;MAEnD,OAAO,MAAM;QACXN,YAAY,CAACQ,mBAAmB,CAAC,YAAY,EAAEP,gBAAgB,CAAC;QAChED,YAAY,CAACQ,mBAAmB,CAAC,SAAS,EAAEN,aAAa,CAAC;QAC1DF,YAAY,CAACQ,mBAAmB,CAAC,OAAO,EAAEF,WAAW,CAAC;MACxD,CAAC;IACH;EACF,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAKsB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9BpB,KAAK,iBACJH,OAAA;MACc;MACZwB,GAAG,EAAEf,QAAS;MACda,SAAS,EAAE,eAAejB,aAAa,GAAG,QAAQ,GAAG,EAAE,EAAG;MAC1DoB,QAAQ;MACRC,KAAK;MACLC,IAAI;MACJC,WAAW;MACXC,MAAM,EAAE3B,UAAW;MAAAqB,QAAA,gBAEnBvB,OAAA;QAAQ8B,GAAG,EAAE3B,KAAM;QAAC4B,IAAI,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCnC,OAAA;QAAK8B,GAAG,EAAE5B,UAAW;QAACkC,GAAG,EAAC;MAAkB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAV1ChC,KAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWL,CACR,EAEA,CAAC,CAAChC,KAAK,IAAI,CAACI,cAAc,kBACzBP,OAAA;MACEsB,SAAS,EAAC,wBAAwB;MAClCe,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAOpC,UAAU;MAAI;IAAE;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAzEIH,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AA2ErB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}