{"ast":null,"code":"var _jsxFileName = \"/Users/eunjinjeong/k-tabletop/src/components/AudioManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioManager = ({\n  currentTheme,\n  isMuted,\n  volume,\n  onAudioReady\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentAudioSrc, setCurrentAudioSrc] = useState('');\n  useEffect(() => {\n    if (!(currentTheme !== null && currentTheme !== void 0 && currentTheme.sound)) return;\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    // If it's a new audio source, load it\n    if (currentAudioSrc !== currentTheme.sound) {\n      setIsLoading(true);\n      audio.src = currentTheme.sound;\n      audio.load();\n      setCurrentAudioSrc(currentTheme.sound);\n    }\n\n    // Set volume\n    audio.volume = isMuted ? 0 : volume;\n\n    // Play audio if not muted\n    if (!isMuted && currentTheme.sound) {\n      const playPromise = audio.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          setIsLoading(false);\n          onAudioReady === null || onAudioReady === void 0 ? void 0 : onAudioReady();\n        }).catch(error => {\n          console.log('Audio autoplay prevented:', error);\n          setIsLoading(false);\n        });\n      }\n    } else if (isMuted) {\n      audio.pause();\n    }\n  }, [currentTheme, isMuted, volume, currentAudioSrc, onAudioReady]);\n\n  // Handle volume changes\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = isMuted ? 0 : volume;\n    }\n  }, [volume, isMuted]);\n\n  // Handle mute changes\n  useEffect(() => {\n    if (!audioRef.current) return;\n    if (isMuted) {\n      audioRef.current.pause();\n    } else if (currentTheme !== null && currentTheme !== void 0 && currentTheme.sound) {\n      audioRef.current.play().catch(error => {\n        console.log('Audio play prevented:', error);\n      });\n    }\n  }, [isMuted, currentTheme]);\n  return /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    loop: true,\n    preload: \"auto\",\n    style: {\n      display: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioManager, \"c9pcUfIEwHunvV3DVkEEIGVOIMQ=\");\n_c = AudioManager;\nexport default AudioManager;\nvar _c;\n$RefreshReg$(_c, \"AudioManager\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","AudioManager","currentTheme","isMuted","volume","onAudioReady","_s","audioRef","isLoading","setIsLoading","currentAudioSrc","setCurrentAudioSrc","sound","audio","current","src","load","playPromise","play","undefined","then","catch","error","console","log","pause","ref","loop","preload","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eunjinjeong/k-tabletop/src/components/AudioManager.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst AudioManager = ({ currentTheme, isMuted, volume, onAudioReady }) => {\n  const audioRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentAudioSrc, setCurrentAudioSrc] = useState('');\n\n  useEffect(() => {\n    if (!currentTheme?.sound) return;\n\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    // If it's a new audio source, load it\n    if (currentAudioSrc !== currentTheme.sound) {\n      setIsLoading(true);\n      audio.src = currentTheme.sound;\n      audio.load();\n      setCurrentAudioSrc(currentTheme.sound);\n    }\n\n    // Set volume\n    audio.volume = isMuted ? 0 : volume;\n\n    // Play audio if not muted\n    if (!isMuted && currentTheme.sound) {\n      const playPromise = audio.play();\n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {\n            setIsLoading(false);\n            onAudioReady?.();\n          })\n          .catch((error) => {\n            console.log('Audio autoplay prevented:', error);\n            setIsLoading(false);\n          });\n      }\n    } else if (isMuted) {\n      audio.pause();\n    }\n  }, [currentTheme, isMuted, volume, currentAudioSrc, onAudioReady]);\n\n  // Handle volume changes\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = isMuted ? 0 : volume;\n    }\n  }, [volume, isMuted]);\n\n  // Handle mute changes\n  useEffect(() => {\n    if (!audioRef.current) return;\n\n    if (isMuted) {\n      audioRef.current.pause();\n    } else if (currentTheme?.sound) {\n      audioRef.current.play().catch((error) => {\n        console.log('Audio play prevented:', error);\n      });\n    }\n  }, [isMuted, currentTheme]);\n\n  return (\n    <audio\n      ref={audioRef}\n      loop\n      preload=\"auto\"\n      style={{ display: 'none' }}\n    />\n  );\n};\n\nexport default AudioManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}