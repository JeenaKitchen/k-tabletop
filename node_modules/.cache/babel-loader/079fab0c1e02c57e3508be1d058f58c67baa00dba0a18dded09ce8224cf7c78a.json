{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AudioManager=_ref=>{let{currentTheme,isMuted,volume,onAudioReady}=_ref;const audioRef=useRef(null);const[isLoading,setIsLoading]=useState(false);const[currentAudioSrc,setCurrentAudioSrc]=useState('');useEffect(()=>{if(!(currentTheme!==null&&currentTheme!==void 0&&currentTheme.sound))return;const audio=audioRef.current;if(!audio)return;// If it's a new audio source, load it\nif(currentAudioSrc!==currentTheme.sound){setIsLoading(true);audio.src=currentTheme.sound;audio.load();setCurrentAudioSrc(currentTheme.sound);}// Set volume\naudio.volume=isMuted?0:volume;// Play audio if not muted\nif(!isMuted&&currentTheme.sound){const playPromise=audio.play();if(playPromise!==undefined){playPromise.then(()=>{setIsLoading(false);onAudioReady===null||onAudioReady===void 0?void 0:onAudioReady();}).catch(error=>{console.log('Audio autoplay prevented:',error);setIsLoading(false);});}}else if(isMuted){audio.pause();}},[currentTheme,isMuted,volume,currentAudioSrc,onAudioReady]);// Handle volume changes\nuseEffect(()=>{if(audioRef.current){audioRef.current.volume=isMuted?0:volume;}},[volume,isMuted]);// Handle mute changes\nuseEffect(()=>{if(!audioRef.current)return;if(isMuted){audioRef.current.pause();}else if(currentTheme!==null&&currentTheme!==void 0&&currentTheme.sound){audioRef.current.play().catch(error=>{console.log('Audio play prevented:',error);});}},[isMuted,currentTheme]);return/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,loop:true,preload:\"auto\",style:{display:'none'}});};export default AudioManager;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","AudioManager","_ref","currentTheme","isMuted","volume","onAudioReady","audioRef","isLoading","setIsLoading","currentAudioSrc","setCurrentAudioSrc","sound","audio","current","src","load","playPromise","play","undefined","then","catch","error","console","log","pause","ref","loop","preload","style","display"],"sources":["/Users/eunjinjeong/Desktop/cursor project/k-tabletop/src/components/AudioManager.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst AudioManager = ({ currentTheme, isMuted, volume, onAudioReady }) => {\n  const audioRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentAudioSrc, setCurrentAudioSrc] = useState('');\n\n  useEffect(() => {\n    if (!currentTheme?.sound) return;\n\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    // If it's a new audio source, load it\n    if (currentAudioSrc !== currentTheme.sound) {\n      setIsLoading(true);\n      audio.src = currentTheme.sound;\n      audio.load();\n      setCurrentAudioSrc(currentTheme.sound);\n    }\n\n    // Set volume\n    audio.volume = isMuted ? 0 : volume;\n\n    // Play audio if not muted\n    if (!isMuted && currentTheme.sound) {\n      const playPromise = audio.play();\n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {\n            setIsLoading(false);\n            onAudioReady?.();\n          })\n          .catch((error) => {\n            console.log('Audio autoplay prevented:', error);\n            setIsLoading(false);\n          });\n      }\n    } else if (isMuted) {\n      audio.pause();\n    }\n  }, [currentTheme, isMuted, volume, currentAudioSrc, onAudioReady]);\n\n  // Handle volume changes\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = isMuted ? 0 : volume;\n    }\n  }, [volume, isMuted]);\n\n  // Handle mute changes\n  useEffect(() => {\n    if (!audioRef.current) return;\n\n    if (isMuted) {\n      audioRef.current.pause();\n    } else if (currentTheme?.sound) {\n      audioRef.current.play().catch((error) => {\n        console.log('Audio play prevented:', error);\n      });\n    }\n  }, [isMuted, currentTheme]);\n\n  return (\n    <audio\n      ref={audioRef}\n      loop\n      preload=\"auto\"\n      style={{ display: 'none' }}\n    />\n  );\n};\n\nexport default AudioManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}