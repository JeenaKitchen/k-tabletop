{"ast":null,"code":"import{themeConfig}from'../data/themeConfig';import markdownService from'./markdownService';class ThemeService{constructor(){this.themes=null;this.isLoading=false;this.error=null;}// Combine static theme config with dynamic markdown dishes\nasync buildThemes(){const themes=[];for(const themeConfigItem of themeConfig){try{const dishes=await markdownService.getRecipesForTheme(themeConfigItem.name);themes.push({...themeConfigItem,dishes:dishes});}catch(error){console.error(`Error loading recipes for theme ${themeConfigItem.name}:`,error);// Add theme with empty dishes if recipes fail to load\nthemes.push({...themeConfigItem,dishes:[]});}}return themes;}// Get all themes with dishes from markdown\nasync getThemes(){let forceRefresh=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(this.themes&&!forceRefresh){return{themes:this.themes,isLoading:false,error:null};}if(this.isLoading){return{themes:this.themes,isLoading:true,error:this.error};}this.isLoading=true;this.error=null;try{this.themes=await this.buildThemes();return{themes:this.themes,isLoading:false,error:null};}catch(error){console.error('Error loading themes:',error);this.error=error.message;// If we have cached themes, return them\nif(this.themes){return{themes:this.themes,isLoading:false,error:this.error};}// Otherwise, return empty themes with error\nreturn{themes:[],isLoading:false,error:this.error};}finally{this.isLoading=false;}}// Get a specific theme by index\nasync getTheme(index){let forceRefresh=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const result=await this.getThemes(forceRefresh);const theme=result.themes[index]||null;return{theme,isLoading:result.isLoading,error:result.error};}// Clear cache and force refresh\nasync refreshThemes(){markdownService.clearCache();this.themes=null;return await this.getThemes(true);}}export default new ThemeService();","map":{"version":3,"names":["themeConfig","markdownService","ThemeService","constructor","themes","isLoading","error","buildThemes","themeConfigItem","dishes","getRecipesForTheme","name","push","console","getThemes","forceRefresh","arguments","length","undefined","message","getTheme","index","result","theme","refreshThemes","clearCache"],"sources":["/Users/eunjinjeong/Desktop/cursor project/k-tabletop/src/services/themeService.js"],"sourcesContent":["import { themeConfig } from '../data/themeConfig';\nimport markdownService from './markdownService';\n\nclass ThemeService {\n  constructor() {\n    this.themes = null;\n    this.isLoading = false;\n    this.error = null;\n  }\n\n  // Combine static theme config with dynamic markdown dishes\n  async buildThemes() {\n    const themes = [];\n\n    for (const themeConfigItem of themeConfig) {\n      try {\n        const dishes = await markdownService.getRecipesForTheme(themeConfigItem.name);\n        \n        themes.push({\n          ...themeConfigItem,\n          dishes: dishes\n        });\n      } catch (error) {\n        console.error(`Error loading recipes for theme ${themeConfigItem.name}:`, error);\n        // Add theme with empty dishes if recipes fail to load\n        themes.push({\n          ...themeConfigItem,\n          dishes: []\n        });\n      }\n    }\n\n    return themes;\n  }\n\n  // Get all themes with dishes from markdown\n  async getThemes(forceRefresh = false) {\n    if (this.themes && !forceRefresh) {\n      return {\n        themes: this.themes,\n        isLoading: false,\n        error: null\n      };\n    }\n\n    if (this.isLoading) {\n      return {\n        themes: this.themes,\n        isLoading: true,\n        error: this.error\n      };\n    }\n\n    this.isLoading = true;\n    this.error = null;\n\n    try {\n      this.themes = await this.buildThemes();\n      \n      return {\n        themes: this.themes,\n        isLoading: false,\n        error: null\n      };\n    } catch (error) {\n      console.error('Error loading themes:', error);\n      this.error = error.message;\n      \n      // If we have cached themes, return them\n      if (this.themes) {\n        return {\n          themes: this.themes,\n          isLoading: false,\n          error: this.error\n        };\n      }\n      \n      // Otherwise, return empty themes with error\n      return {\n        themes: [],\n        isLoading: false,\n        error: this.error\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  // Get a specific theme by index\n  async getTheme(index, forceRefresh = false) {\n    const result = await this.getThemes(forceRefresh);\n    const theme = result.themes[index] || null;\n    \n    return {\n      theme,\n      isLoading: result.isLoading,\n      error: result.error\n    };\n  }\n\n  // Clear cache and force refresh\n  async refreshThemes() {\n    markdownService.clearCache();\n    this.themes = null;\n    return await this.getThemes(true);\n  }\n}\n\nexport default new ThemeService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}